name: Code Coverage

on:
  workflow_dispatch:

jobs:
  Code-Coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
        dotnet-version: [ '3.1.x' ]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Dotnet Version (${{ matrix.dotnet-version }})
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Find And Replace Values (App Settings)
      uses: abhinavminhas/replace-tokens@main
      with:
        files: '${{ github.workspace }}/QueryDB.Core.Tests/appsettings.json'
        replacements: '__DB_PASSWORD__=${{ secrets.DB_PASSWORD }},__DB_PASSWORD__=${{ secrets.DB_PASSWORD }},__DB_PASSWORD__=${{ secrets.DB_PASSWORD }},__DB_PASSWORD__=${{ secrets.DB_PASSWORD }}'
        
    - name: Build
      run: dotnet build QueryDB.Core.Tests/QueryDB.Core.Tests.csproj --configuration Release

    - name: Docker Compose (Start - DB Containers)
      uses: ./.github/workflows/docker-compose-start-dbs
      with:
        dbPassword: ${{ secrets.DB_PASSWORD }}
    
    - name: Docker Inspect (Health Check - DB Containers)
      uses: ./.github/workflows/docker-inspect-health-check
      with:
        dbPassword: ${{ secrets.DB_PASSWORD }}

    - name: Docker Execute (Seed Data)
      uses: ./.github/workflows/docker-execute-seed-data
      with:
        dbPassword: ${{ secrets.DB_PASSWORD }}
    
    - name: Test
      run: dotnet test --no-build --logger "console;verbosity=detailed" --verbosity normal --configuration Release --filter TestCategory=DB-TESTS /p:CollectCoverage=true /p:CoverletOutputFormat=lcov

    - name: Docker Compose (Tear Down - DB Containers)
      uses: ./.github/workflows/docker-compose-teardown-dbs

    - name: Upload Coverage To Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
